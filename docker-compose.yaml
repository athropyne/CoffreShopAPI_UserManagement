services:
  db:
    image: postgres:13-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  broker:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network

  app:
    build: .
    command: sh -c "sleep 5 && alembic upgrade head && python main.py"
    container_name: fastapi_app
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy
    env_file: .env
    ports:
      - "${SERVER_PORT}:8000"
    networks:
      - app-network

  smtp_server:
    build: .
    command: sh -c "python fake_smtp_server.py"
    container_name: fake_smtp_server_app
    depends_on:
      app:
        condition: service_started
      broker:
        condition: service_healthy
    env_file: .env
    ports:
      - "${SMTP_SERVER_PORT}:1025"
    networks:
      - app-network

  worker:
    build: .
    command: sh -c "arq src.app.WorkerSettings"
    container_name: worker_app
    depends_on:
      app:
        condition: service_started
      broker:
        condition: service_started
    env_file: .env
    networks:
      - app-network


volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge